#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Online_shopping_system
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="shopping")]
	public partial class shoppingDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertprod_cat(prod_cat instance);
    partial void Updateprod_cat(prod_cat instance);
    partial void Deleteprod_cat(prod_cat instance);
    partial void Insertcity(city instance);
    partial void Updatecity(city instance);
    partial void Deletecity(city instance);
    partial void Insertstate(state instance);
    partial void Updatestate(state instance);
    partial void Deletestate(state instance);
    partial void Insertuser(user instance);
    partial void Updateuser(user instance);
    partial void Deleteuser(user instance);
    partial void Insertprod_cat_2(prod_cat_2 instance);
    partial void Updateprod_cat_2(prod_cat_2 instance);
    partial void Deleteprod_cat_2(prod_cat_2 instance);
    partial void Insertcart(cart instance);
    partial void Updatecart(cart instance);
    partial void Deletecart(cart instance);
    partial void Insertproduct(product instance);
    partial void Updateproduct(product instance);
    partial void Deleteproduct(product instance);
    partial void Insertaddress(address instance);
    partial void Updateaddress(address instance);
    partial void Deleteaddress(address instance);
    partial void Insertorder(order instance);
    partial void Updateorder(order instance);
    partial void Deleteorder(order instance);
    partial void Insertdelivery(delivery instance);
    partial void Updatedelivery(delivery instance);
    partial void Deletedelivery(delivery instance);
    partial void Insertfeedback(feedback instance);
    partial void Updatefeedback(feedback instance);
    partial void Deletefeedback(feedback instance);
    #endregion
		
		public shoppingDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["shoppingConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public shoppingDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public shoppingDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public shoppingDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public shoppingDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<prod_cat> prod_cats
		{
			get
			{
				return this.GetTable<prod_cat>();
			}
		}
		
		public System.Data.Linq.Table<city> cities
		{
			get
			{
				return this.GetTable<city>();
			}
		}
		
		public System.Data.Linq.Table<state> states
		{
			get
			{
				return this.GetTable<state>();
			}
		}
		
		public System.Data.Linq.Table<user> users
		{
			get
			{
				return this.GetTable<user>();
			}
		}
		
		public System.Data.Linq.Table<prod_cat_2> prod_cat_2s
		{
			get
			{
				return this.GetTable<prod_cat_2>();
			}
		}
		
		public System.Data.Linq.Table<cart> carts
		{
			get
			{
				return this.GetTable<cart>();
			}
		}
		
		public System.Data.Linq.Table<product> products
		{
			get
			{
				return this.GetTable<product>();
			}
		}
		
		public System.Data.Linq.Table<address> addresses
		{
			get
			{
				return this.GetTable<address>();
			}
		}
		
		public System.Data.Linq.Table<order> orders
		{
			get
			{
				return this.GetTable<order>();
			}
		}
		
		public System.Data.Linq.Table<delivery> deliveries
		{
			get
			{
				return this.GetTable<delivery>();
			}
		}
		
		public System.Data.Linq.Table<feedback> feedbacks
		{
			get
			{
				return this.GetTable<feedback>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.prod_cat")]
	public partial class prod_cat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _cat_name;
		
		private EntitySet<prod_cat_2> _prod_cat_2s;
		
		private EntitySet<product> _products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Oncat_nameChanging(string value);
    partial void Oncat_nameChanged();
    #endregion
		
		public prod_cat()
		{
			this._prod_cat_2s = new EntitySet<prod_cat_2>(new Action<prod_cat_2>(this.attach_prod_cat_2s), new Action<prod_cat_2>(this.detach_prod_cat_2s));
			this._products = new EntitySet<product>(new Action<product>(this.attach_products), new Action<product>(this.detach_products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cat_name", DbType="NVarChar(50)")]
		public string cat_name
		{
			get
			{
				return this._cat_name;
			}
			set
			{
				if ((this._cat_name != value))
				{
					this.Oncat_nameChanging(value);
					this.SendPropertyChanging();
					this._cat_name = value;
					this.SendPropertyChanged("cat_name");
					this.Oncat_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="prod_cat_prod_cat_2", Storage="_prod_cat_2s", ThisKey="id", OtherKey="cat_id")]
		public EntitySet<prod_cat_2> prod_cat_2s
		{
			get
			{
				return this._prod_cat_2s;
			}
			set
			{
				this._prod_cat_2s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="prod_cat_product", Storage="_products", ThisKey="id", OtherKey="cat_id")]
		public EntitySet<product> products
		{
			get
			{
				return this._products;
			}
			set
			{
				this._products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_prod_cat_2s(prod_cat_2 entity)
		{
			this.SendPropertyChanging();
			entity.prod_cat = this;
		}
		
		private void detach_prod_cat_2s(prod_cat_2 entity)
		{
			this.SendPropertyChanging();
			entity.prod_cat = null;
		}
		
		private void attach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.prod_cat = this;
		}
		
		private void detach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.prod_cat = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.city")]
	public partial class city : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _city_name;
		
		private System.Nullable<int> _state_id;
		
		private EntityRef<state> _state;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void Oncity_nameChanging(string value);
    partial void Oncity_nameChanged();
    partial void Onstate_idChanging(System.Nullable<int> value);
    partial void Onstate_idChanged();
    #endregion
		
		public city()
		{
			this._state = default(EntityRef<state>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city_name", DbType="NChar(20)")]
		public string city_name
		{
			get
			{
				return this._city_name;
			}
			set
			{
				if ((this._city_name != value))
				{
					this.Oncity_nameChanging(value);
					this.SendPropertyChanging();
					this._city_name = value;
					this.SendPropertyChanged("city_name");
					this.Oncity_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state_id", DbType="Int")]
		public System.Nullable<int> state_id
		{
			get
			{
				return this._state_id;
			}
			set
			{
				if ((this._state_id != value))
				{
					if (this._state.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstate_idChanging(value);
					this.SendPropertyChanging();
					this._state_id = value;
					this.SendPropertyChanged("state_id");
					this.Onstate_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="state_city", Storage="_state", ThisKey="state_id", OtherKey="Id", IsForeignKey=true)]
		public state state
		{
			get
			{
				return this._state.Entity;
			}
			set
			{
				state previousValue = this._state.Entity;
				if (((previousValue != value) 
							|| (this._state.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._state.Entity = null;
						previousValue.cities.Remove(this);
					}
					this._state.Entity = value;
					if ((value != null))
					{
						value.cities.Add(this);
						this._state_id = value.Id;
					}
					else
					{
						this._state_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("state");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.state")]
	public partial class state : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _state_name;
		
		private EntitySet<city> _cities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void Onstate_nameChanging(string value);
    partial void Onstate_nameChanged();
    #endregion
		
		public state()
		{
			this._cities = new EntitySet<city>(new Action<city>(this.attach_cities), new Action<city>(this.detach_cities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state_name", DbType="Char(20)")]
		public string state_name
		{
			get
			{
				return this._state_name;
			}
			set
			{
				if ((this._state_name != value))
				{
					this.Onstate_nameChanging(value);
					this.SendPropertyChanging();
					this._state_name = value;
					this.SendPropertyChanged("state_name");
					this.Onstate_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="state_city", Storage="_cities", ThisKey="Id", OtherKey="state_id")]
		public EntitySet<city> cities
		{
			get
			{
				return this._cities;
			}
			set
			{
				this._cities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_cities(city entity)
		{
			this.SendPropertyChanging();
			entity.state = this;
		}
		
		private void detach_cities(city entity)
		{
			this.SendPropertyChanging();
			entity.state = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[user]")]
	public partial class user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _username;
		
		private string _password;
		
		private string _first_name;
		
		private string _last_name;
		
		private string _email_id;
		
		private string _gender;
		
		private System.Nullable<decimal> _mob_no;
		
		private string _state;
		
		private string _city;
		
		private string _question;
		
		private string _answer;
		
		private string _role;
		
		private EntitySet<cart> _carts;
		
		private EntitySet<address> _addresses;
		
		private EntitySet<order> _orders;
		
		private EntitySet<delivery> _deliveries;
		
		private EntitySet<feedback> _feedbacks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void Onfirst_nameChanging(string value);
    partial void Onfirst_nameChanged();
    partial void Onlast_nameChanging(string value);
    partial void Onlast_nameChanged();
    partial void Onemail_idChanging(string value);
    partial void Onemail_idChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    partial void Onmob_noChanging(System.Nullable<decimal> value);
    partial void Onmob_noChanged();
    partial void OnstateChanging(string value);
    partial void OnstateChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnquestionChanging(string value);
    partial void OnquestionChanged();
    partial void OnanswerChanging(string value);
    partial void OnanswerChanged();
    partial void OnroleChanging(string value);
    partial void OnroleChanged();
    #endregion
		
		public user()
		{
			this._carts = new EntitySet<cart>(new Action<cart>(this.attach_carts), new Action<cart>(this.detach_carts));
			this._addresses = new EntitySet<address>(new Action<address>(this.attach_addresses), new Action<address>(this.detach_addresses));
			this._orders = new EntitySet<order>(new Action<order>(this.attach_orders), new Action<order>(this.detach_orders));
			this._deliveries = new EntitySet<delivery>(new Action<delivery>(this.attach_deliveries), new Action<delivery>(this.detach_deliveries));
			this._feedbacks = new EntitySet<feedback>(new Action<feedback>(this.attach_feedbacks), new Action<feedback>(this.detach_feedbacks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(50)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(50)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_first_name", DbType="NVarChar(50)")]
		public string first_name
		{
			get
			{
				return this._first_name;
			}
			set
			{
				if ((this._first_name != value))
				{
					this.Onfirst_nameChanging(value);
					this.SendPropertyChanging();
					this._first_name = value;
					this.SendPropertyChanged("first_name");
					this.Onfirst_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_name", DbType="NVarChar(50)")]
		public string last_name
		{
			get
			{
				return this._last_name;
			}
			set
			{
				if ((this._last_name != value))
				{
					this.Onlast_nameChanging(value);
					this.SendPropertyChanging();
					this._last_name = value;
					this.SendPropertyChanged("last_name");
					this.Onlast_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email_id", DbType="NVarChar(50)")]
		public string email_id
		{
			get
			{
				return this._email_id;
			}
			set
			{
				if ((this._email_id != value))
				{
					this.Onemail_idChanging(value);
					this.SendPropertyChanging();
					this._email_id = value;
					this.SendPropertyChanged("email_id");
					this.Onemail_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="NChar(10)")]
		public string gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mob_no", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> mob_no
		{
			get
			{
				return this._mob_no;
			}
			set
			{
				if ((this._mob_no != value))
				{
					this.Onmob_noChanging(value);
					this.SendPropertyChanging();
					this._mob_no = value;
					this.SendPropertyChanged("mob_no");
					this.Onmob_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state", DbType="NChar(10)")]
		public string state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnstateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("state");
					this.OnstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="NChar(10)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_question", DbType="NVarChar(MAX)")]
		public string question
		{
			get
			{
				return this._question;
			}
			set
			{
				if ((this._question != value))
				{
					this.OnquestionChanging(value);
					this.SendPropertyChanging();
					this._question = value;
					this.SendPropertyChanged("question");
					this.OnquestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answer", DbType="NVarChar(MAX)")]
		public string answer
		{
			get
			{
				return this._answer;
			}
			set
			{
				if ((this._answer != value))
				{
					this.OnanswerChanging(value);
					this.SendPropertyChanging();
					this._answer = value;
					this.SendPropertyChanged("answer");
					this.OnanswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role", DbType="NChar(10)")]
		public string role
		{
			get
			{
				return this._role;
			}
			set
			{
				if ((this._role != value))
				{
					this.OnroleChanging(value);
					this.SendPropertyChanging();
					this._role = value;
					this.SendPropertyChanged("role");
					this.OnroleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_cart", Storage="_carts", ThisKey="id", OtherKey="cust_id")]
		public EntitySet<cart> carts
		{
			get
			{
				return this._carts;
			}
			set
			{
				this._carts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_address", Storage="_addresses", ThisKey="id", OtherKey="user_id")]
		public EntitySet<address> addresses
		{
			get
			{
				return this._addresses;
			}
			set
			{
				this._addresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_order", Storage="_orders", ThisKey="id", OtherKey="cust_id")]
		public EntitySet<order> orders
		{
			get
			{
				return this._orders;
			}
			set
			{
				this._orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_delivery", Storage="_deliveries", ThisKey="id", OtherKey="cust_id")]
		public EntitySet<delivery> deliveries
		{
			get
			{
				return this._deliveries;
			}
			set
			{
				this._deliveries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_feedback", Storage="_feedbacks", ThisKey="id", OtherKey="cust_id")]
		public EntitySet<feedback> feedbacks
		{
			get
			{
				return this._feedbacks;
			}
			set
			{
				this._feedbacks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_carts(cart entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_carts(cart entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_addresses(address entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_addresses(address entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_orders(order entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_orders(order entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_deliveries(delivery entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_deliveries(delivery entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_feedbacks(feedback entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_feedbacks(feedback entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.prod_cat_2")]
	public partial class prod_cat_2 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _cat_name_2;
		
		private System.Nullable<int> _cat_id;
		
		private EntitySet<product> _products;
		
		private EntityRef<prod_cat> _prod_cat;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void Oncat_name_2Changing(string value);
    partial void Oncat_name_2Changed();
    partial void Oncat_idChanging(System.Nullable<int> value);
    partial void Oncat_idChanged();
    #endregion
		
		public prod_cat_2()
		{
			this._products = new EntitySet<product>(new Action<product>(this.attach_products), new Action<product>(this.detach_products));
			this._prod_cat = default(EntityRef<prod_cat>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cat_name_2", DbType="NVarChar(50)")]
		public string cat_name_2
		{
			get
			{
				return this._cat_name_2;
			}
			set
			{
				if ((this._cat_name_2 != value))
				{
					this.Oncat_name_2Changing(value);
					this.SendPropertyChanging();
					this._cat_name_2 = value;
					this.SendPropertyChanged("cat_name_2");
					this.Oncat_name_2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cat_id", DbType="Int")]
		public System.Nullable<int> cat_id
		{
			get
			{
				return this._cat_id;
			}
			set
			{
				if ((this._cat_id != value))
				{
					if (this._prod_cat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncat_idChanging(value);
					this.SendPropertyChanging();
					this._cat_id = value;
					this.SendPropertyChanged("cat_id");
					this.Oncat_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="prod_cat_2_product", Storage="_products", ThisKey="Id", OtherKey="cat_id_2")]
		public EntitySet<product> products
		{
			get
			{
				return this._products;
			}
			set
			{
				this._products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="prod_cat_prod_cat_2", Storage="_prod_cat", ThisKey="cat_id", OtherKey="id", IsForeignKey=true)]
		public prod_cat prod_cat
		{
			get
			{
				return this._prod_cat.Entity;
			}
			set
			{
				prod_cat previousValue = this._prod_cat.Entity;
				if (((previousValue != value) 
							|| (this._prod_cat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._prod_cat.Entity = null;
						previousValue.prod_cat_2s.Remove(this);
					}
					this._prod_cat.Entity = value;
					if ((value != null))
					{
						value.prod_cat_2s.Add(this);
						this._cat_id = value.id;
					}
					else
					{
						this._cat_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("prod_cat");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.prod_cat_2 = this;
		}
		
		private void detach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.prod_cat_2 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cart")]
	public partial class cart : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _prod_id;
		
		private System.Nullable<decimal> _total_cost;
		
		private System.Nullable<int> _cust_id;
		
		private System.Nullable<decimal> _quantity;
		
		private EntityRef<user> _user;
		
		private EntityRef<product> _product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onprod_idChanging(System.Nullable<int> value);
    partial void Onprod_idChanged();
    partial void Ontotal_costChanging(System.Nullable<decimal> value);
    partial void Ontotal_costChanged();
    partial void Oncust_idChanging(System.Nullable<int> value);
    partial void Oncust_idChanged();
    partial void OnquantityChanging(System.Nullable<decimal> value);
    partial void OnquantityChanged();
    #endregion
		
		public cart()
		{
			this._user = default(EntityRef<user>);
			this._product = default(EntityRef<product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prod_id", DbType="Int")]
		public System.Nullable<int> prod_id
		{
			get
			{
				return this._prod_id;
			}
			set
			{
				if ((this._prod_id != value))
				{
					if (this._product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onprod_idChanging(value);
					this.SendPropertyChanging();
					this._prod_id = value;
					this.SendPropertyChanged("prod_id");
					this.Onprod_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_cost", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> total_cost
		{
			get
			{
				return this._total_cost;
			}
			set
			{
				if ((this._total_cost != value))
				{
					this.Ontotal_costChanging(value);
					this.SendPropertyChanging();
					this._total_cost = value;
					this.SendPropertyChanged("total_cost");
					this.Ontotal_costChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_id", DbType="Int")]
		public System.Nullable<int> cust_id
		{
			get
			{
				return this._cust_id;
			}
			set
			{
				if ((this._cust_id != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncust_idChanging(value);
					this.SendPropertyChanging();
					this._cust_id = value;
					this.SendPropertyChanged("cust_id");
					this.Oncust_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Decimal(8,0)")]
		public System.Nullable<decimal> quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_cart", Storage="_user", ThisKey="cust_id", OtherKey="id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.carts.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.carts.Add(this);
						this._cust_id = value.id;
					}
					else
					{
						this._cust_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_cart", Storage="_product", ThisKey="prod_id", OtherKey="id", IsForeignKey=true)]
		public product product
		{
			get
			{
				return this._product.Entity;
			}
			set
			{
				product previousValue = this._product.Entity;
				if (((previousValue != value) 
							|| (this._product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._product.Entity = null;
						previousValue.carts.Remove(this);
					}
					this._product.Entity = value;
					if ((value != null))
					{
						value.carts.Add(this);
						this._prod_id = value.id;
					}
					else
					{
						this._prod_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.product")]
	public partial class product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _cat_id;
		
		private string _prod_name;
		
		private string _description;
		
		private System.Nullable<decimal> _price;
		
		private System.Nullable<decimal> _discount_price;
		
		private string _size;
		
		private System.Nullable<int> _cat_id_2;
		
		private System.Nullable<decimal> _prod_quantity;
		
		private EntitySet<cart> _carts;
		
		private EntitySet<order> _orders;
		
		private EntitySet<feedback> _feedbacks;
		
		private EntityRef<prod_cat> _prod_cat;
		
		private EntityRef<prod_cat_2> _prod_cat_2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Oncat_idChanging(System.Nullable<int> value);
    partial void Oncat_idChanged();
    partial void Onprod_nameChanging(string value);
    partial void Onprod_nameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnpriceChanging(System.Nullable<decimal> value);
    partial void OnpriceChanged();
    partial void Ondiscount_priceChanging(System.Nullable<decimal> value);
    partial void Ondiscount_priceChanged();
    partial void OnsizeChanging(string value);
    partial void OnsizeChanged();
    partial void Oncat_id_2Changing(System.Nullable<int> value);
    partial void Oncat_id_2Changed();
    partial void Onprod_quantityChanging(System.Nullable<decimal> value);
    partial void Onprod_quantityChanged();
    #endregion
		
		public product()
		{
			this._carts = new EntitySet<cart>(new Action<cart>(this.attach_carts), new Action<cart>(this.detach_carts));
			this._orders = new EntitySet<order>(new Action<order>(this.attach_orders), new Action<order>(this.detach_orders));
			this._feedbacks = new EntitySet<feedback>(new Action<feedback>(this.attach_feedbacks), new Action<feedback>(this.detach_feedbacks));
			this._prod_cat = default(EntityRef<prod_cat>);
			this._prod_cat_2 = default(EntityRef<prod_cat_2>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cat_id", DbType="Int")]
		public System.Nullable<int> cat_id
		{
			get
			{
				return this._cat_id;
			}
			set
			{
				if ((this._cat_id != value))
				{
					if (this._prod_cat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncat_idChanging(value);
					this.SendPropertyChanging();
					this._cat_id = value;
					this.SendPropertyChanged("cat_id");
					this.Oncat_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prod_name", DbType="NVarChar(100)")]
		public string prod_name
		{
			get
			{
				return this._prod_name;
			}
			set
			{
				if ((this._prod_name != value))
				{
					this.Onprod_nameChanging(value);
					this.SendPropertyChanging();
					this._prod_name = value;
					this.SendPropertyChanged("prod_name");
					this.Onprod_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(300)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(8,0)")]
		public System.Nullable<decimal> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discount_price", DbType="Decimal(8,0)")]
		public System.Nullable<decimal> discount_price
		{
			get
			{
				return this._discount_price;
			}
			set
			{
				if ((this._discount_price != value))
				{
					this.Ondiscount_priceChanging(value);
					this.SendPropertyChanging();
					this._discount_price = value;
					this.SendPropertyChanged("discount_price");
					this.Ondiscount_priceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_size", DbType="NVarChar(50)")]
		public string size
		{
			get
			{
				return this._size;
			}
			set
			{
				if ((this._size != value))
				{
					this.OnsizeChanging(value);
					this.SendPropertyChanging();
					this._size = value;
					this.SendPropertyChanged("size");
					this.OnsizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cat_id_2", DbType="Int")]
		public System.Nullable<int> cat_id_2
		{
			get
			{
				return this._cat_id_2;
			}
			set
			{
				if ((this._cat_id_2 != value))
				{
					if (this._prod_cat_2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncat_id_2Changing(value);
					this.SendPropertyChanging();
					this._cat_id_2 = value;
					this.SendPropertyChanged("cat_id_2");
					this.Oncat_id_2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prod_quantity", DbType="Decimal(8,0)")]
		public System.Nullable<decimal> prod_quantity
		{
			get
			{
				return this._prod_quantity;
			}
			set
			{
				if ((this._prod_quantity != value))
				{
					this.Onprod_quantityChanging(value);
					this.SendPropertyChanging();
					this._prod_quantity = value;
					this.SendPropertyChanged("prod_quantity");
					this.Onprod_quantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_cart", Storage="_carts", ThisKey="id", OtherKey="prod_id")]
		public EntitySet<cart> carts
		{
			get
			{
				return this._carts;
			}
			set
			{
				this._carts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_order", Storage="_orders", ThisKey="id", OtherKey="prod_id")]
		public EntitySet<order> orders
		{
			get
			{
				return this._orders;
			}
			set
			{
				this._orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_feedback", Storage="_feedbacks", ThisKey="id", OtherKey="prod_id")]
		public EntitySet<feedback> feedbacks
		{
			get
			{
				return this._feedbacks;
			}
			set
			{
				this._feedbacks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="prod_cat_product", Storage="_prod_cat", ThisKey="cat_id", OtherKey="id", IsForeignKey=true)]
		public prod_cat prod_cat
		{
			get
			{
				return this._prod_cat.Entity;
			}
			set
			{
				prod_cat previousValue = this._prod_cat.Entity;
				if (((previousValue != value) 
							|| (this._prod_cat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._prod_cat.Entity = null;
						previousValue.products.Remove(this);
					}
					this._prod_cat.Entity = value;
					if ((value != null))
					{
						value.products.Add(this);
						this._cat_id = value.id;
					}
					else
					{
						this._cat_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("prod_cat");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="prod_cat_2_product", Storage="_prod_cat_2", ThisKey="cat_id_2", OtherKey="Id", IsForeignKey=true)]
		public prod_cat_2 prod_cat_2
		{
			get
			{
				return this._prod_cat_2.Entity;
			}
			set
			{
				prod_cat_2 previousValue = this._prod_cat_2.Entity;
				if (((previousValue != value) 
							|| (this._prod_cat_2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._prod_cat_2.Entity = null;
						previousValue.products.Remove(this);
					}
					this._prod_cat_2.Entity = value;
					if ((value != null))
					{
						value.products.Add(this);
						this._cat_id_2 = value.Id;
					}
					else
					{
						this._cat_id_2 = default(Nullable<int>);
					}
					this.SendPropertyChanged("prod_cat_2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_carts(cart entity)
		{
			this.SendPropertyChanging();
			entity.product = this;
		}
		
		private void detach_carts(cart entity)
		{
			this.SendPropertyChanging();
			entity.product = null;
		}
		
		private void attach_orders(order entity)
		{
			this.SendPropertyChanging();
			entity.product = this;
		}
		
		private void detach_orders(order entity)
		{
			this.SendPropertyChanging();
			entity.product = null;
		}
		
		private void attach_feedbacks(feedback entity)
		{
			this.SendPropertyChanging();
			entity.product = this;
		}
		
		private void detach_feedbacks(feedback entity)
		{
			this.SendPropertyChanging();
			entity.product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.address")]
	public partial class address : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _address1;
		
		private System.Nullable<int> _user_id;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void Onaddress1Changing(string value);
    partial void Onaddress1Changed();
    partial void Onuser_idChanging(System.Nullable<int> value);
    partial void Onuser_idChanged();
    #endregion
		
		public address()
		{
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="address", Storage="_address1", DbType="NVarChar(MAX)")]
		public string address1
		{
			get
			{
				return this._address1;
			}
			set
			{
				if ((this._address1 != value))
				{
					this.Onaddress1Changing(value);
					this.SendPropertyChanging();
					this._address1 = value;
					this.SendPropertyChanged("address1");
					this.Onaddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int")]
		public System.Nullable<int> user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_address", Storage="_user", ThisKey="user_id", OtherKey="id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.addresses.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.addresses.Add(this);
						this._user_id = value.id;
					}
					else
					{
						this._user_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[order]")]
	public partial class order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _prod_id;
		
		private System.Nullable<int> _cust_id;
		
		private System.Nullable<System.DateTime> _order_date;
		
		private System.Nullable<decimal> _quantity;
		
		private System.Nullable<decimal> _amount;
		
		private string _shipping_address;
		
		private EntitySet<delivery> _deliveries;
		
		private EntityRef<product> _product;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onprod_idChanging(System.Nullable<int> value);
    partial void Onprod_idChanged();
    partial void Oncust_idChanging(System.Nullable<int> value);
    partial void Oncust_idChanged();
    partial void Onorder_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onorder_dateChanged();
    partial void OnquantityChanging(System.Nullable<decimal> value);
    partial void OnquantityChanged();
    partial void OnamountChanging(System.Nullable<decimal> value);
    partial void OnamountChanged();
    partial void Onshipping_addressChanging(string value);
    partial void Onshipping_addressChanged();
    #endregion
		
		public order()
		{
			this._deliveries = new EntitySet<delivery>(new Action<delivery>(this.attach_deliveries), new Action<delivery>(this.detach_deliveries));
			this._product = default(EntityRef<product>);
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prod_id", DbType="Int")]
		public System.Nullable<int> prod_id
		{
			get
			{
				return this._prod_id;
			}
			set
			{
				if ((this._prod_id != value))
				{
					if (this._product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onprod_idChanging(value);
					this.SendPropertyChanging();
					this._prod_id = value;
					this.SendPropertyChanged("prod_id");
					this.Onprod_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_id", DbType="Int")]
		public System.Nullable<int> cust_id
		{
			get
			{
				return this._cust_id;
			}
			set
			{
				if ((this._cust_id != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncust_idChanging(value);
					this.SendPropertyChanging();
					this._cust_id = value;
					this.SendPropertyChanged("cust_id");
					this.Oncust_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> order_date
		{
			get
			{
				return this._order_date;
			}
			set
			{
				if ((this._order_date != value))
				{
					this.Onorder_dateChanging(value);
					this.SendPropertyChanging();
					this._order_date = value;
					this.SendPropertyChanged("order_date");
					this.Onorder_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[shipping address]", Storage="_shipping_address", DbType="NVarChar(MAX)")]
		public string shipping_address
		{
			get
			{
				return this._shipping_address;
			}
			set
			{
				if ((this._shipping_address != value))
				{
					this.Onshipping_addressChanging(value);
					this.SendPropertyChanging();
					this._shipping_address = value;
					this.SendPropertyChanged("shipping_address");
					this.Onshipping_addressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="order_delivery", Storage="_deliveries", ThisKey="id", OtherKey="order_id")]
		public EntitySet<delivery> deliveries
		{
			get
			{
				return this._deliveries;
			}
			set
			{
				this._deliveries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_order", Storage="_product", ThisKey="prod_id", OtherKey="id", IsForeignKey=true)]
		public product product
		{
			get
			{
				return this._product.Entity;
			}
			set
			{
				product previousValue = this._product.Entity;
				if (((previousValue != value) 
							|| (this._product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._product.Entity = null;
						previousValue.orders.Remove(this);
					}
					this._product.Entity = value;
					if ((value != null))
					{
						value.orders.Add(this);
						this._prod_id = value.id;
					}
					else
					{
						this._prod_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_order", Storage="_user", ThisKey="cust_id", OtherKey="id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.orders.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.orders.Add(this);
						this._cust_id = value.id;
					}
					else
					{
						this._cust_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_deliveries(delivery entity)
		{
			this.SendPropertyChanging();
			entity.order = this;
		}
		
		private void detach_deliveries(delivery entity)
		{
			this.SendPropertyChanging();
			entity.order = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.delivery")]
	public partial class delivery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _cust_id;
		
		private System.Nullable<System.DateTime> _delivery_date;
		
		private string _delivery_status;
		
		private System.Nullable<int> _order_id;
		
		private EntityRef<order> _order;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Oncust_idChanging(System.Nullable<int> value);
    partial void Oncust_idChanged();
    partial void Ondelivery_dateChanging(System.Nullable<System.DateTime> value);
    partial void Ondelivery_dateChanged();
    partial void Ondelivery_statusChanging(string value);
    partial void Ondelivery_statusChanged();
    partial void Onorder_idChanging(System.Nullable<int> value);
    partial void Onorder_idChanged();
    #endregion
		
		public delivery()
		{
			this._order = default(EntityRef<order>);
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_id", DbType="Int")]
		public System.Nullable<int> cust_id
		{
			get
			{
				return this._cust_id;
			}
			set
			{
				if ((this._cust_id != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncust_idChanging(value);
					this.SendPropertyChanging();
					this._cust_id = value;
					this.SendPropertyChanged("cust_id");
					this.Oncust_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_delivery_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> delivery_date
		{
			get
			{
				return this._delivery_date;
			}
			set
			{
				if ((this._delivery_date != value))
				{
					this.Ondelivery_dateChanging(value);
					this.SendPropertyChanging();
					this._delivery_date = value;
					this.SendPropertyChanged("delivery_date");
					this.Ondelivery_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_delivery_status", DbType="NVarChar(50)")]
		public string delivery_status
		{
			get
			{
				return this._delivery_status;
			}
			set
			{
				if ((this._delivery_status != value))
				{
					this.Ondelivery_statusChanging(value);
					this.SendPropertyChanging();
					this._delivery_status = value;
					this.SendPropertyChanged("delivery_status");
					this.Ondelivery_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_id", DbType="Int")]
		public System.Nullable<int> order_id
		{
			get
			{
				return this._order_id;
			}
			set
			{
				if ((this._order_id != value))
				{
					if (this._order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onorder_idChanging(value);
					this.SendPropertyChanging();
					this._order_id = value;
					this.SendPropertyChanged("order_id");
					this.Onorder_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="order_delivery", Storage="_order", ThisKey="order_id", OtherKey="id", IsForeignKey=true)]
		public order order
		{
			get
			{
				return this._order.Entity;
			}
			set
			{
				order previousValue = this._order.Entity;
				if (((previousValue != value) 
							|| (this._order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._order.Entity = null;
						previousValue.deliveries.Remove(this);
					}
					this._order.Entity = value;
					if ((value != null))
					{
						value.deliveries.Add(this);
						this._order_id = value.id;
					}
					else
					{
						this._order_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("order");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_delivery", Storage="_user", ThisKey="cust_id", OtherKey="id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.deliveries.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.deliveries.Add(this);
						this._cust_id = value.id;
					}
					else
					{
						this._cust_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.feedback")]
	public partial class feedback : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _cust_id;
		
		private System.Nullable<int> _prod_id;
		
		private string _message;
		
		private EntityRef<product> _product;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void Oncust_idChanging(System.Nullable<int> value);
    partial void Oncust_idChanged();
    partial void Onprod_idChanging(System.Nullable<int> value);
    partial void Onprod_idChanged();
    partial void OnmessageChanging(string value);
    partial void OnmessageChanged();
    #endregion
		
		public feedback()
		{
			this._product = default(EntityRef<product>);
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_id", DbType="Int")]
		public System.Nullable<int> cust_id
		{
			get
			{
				return this._cust_id;
			}
			set
			{
				if ((this._cust_id != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncust_idChanging(value);
					this.SendPropertyChanging();
					this._cust_id = value;
					this.SendPropertyChanged("cust_id");
					this.Oncust_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prod_id", DbType="Int")]
		public System.Nullable<int> prod_id
		{
			get
			{
				return this._prod_id;
			}
			set
			{
				if ((this._prod_id != value))
				{
					if (this._product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onprod_idChanging(value);
					this.SendPropertyChanging();
					this._prod_id = value;
					this.SendPropertyChanged("prod_id");
					this.Onprod_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_message", DbType="NVarChar(MAX)")]
		public string message
		{
			get
			{
				return this._message;
			}
			set
			{
				if ((this._message != value))
				{
					this.OnmessageChanging(value);
					this.SendPropertyChanging();
					this._message = value;
					this.SendPropertyChanged("message");
					this.OnmessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_feedback", Storage="_product", ThisKey="prod_id", OtherKey="id", IsForeignKey=true)]
		public product product
		{
			get
			{
				return this._product.Entity;
			}
			set
			{
				product previousValue = this._product.Entity;
				if (((previousValue != value) 
							|| (this._product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._product.Entity = null;
						previousValue.feedbacks.Remove(this);
					}
					this._product.Entity = value;
					if ((value != null))
					{
						value.feedbacks.Add(this);
						this._prod_id = value.id;
					}
					else
					{
						this._prod_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_feedback", Storage="_user", ThisKey="cust_id", OtherKey="id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.feedbacks.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.feedbacks.Add(this);
						this._cust_id = value.id;
					}
					else
					{
						this._cust_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
